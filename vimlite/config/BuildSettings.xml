<?xml version="1.0" encoding="UTF-8"?>
<BuildSettings Version="2.0.7">
  <Compilers>
    <Compiler Name="gnu gcc" GenerateDependenciesFiles="yes">
      <Switch Name="ArchiveOutput" Value=" "/>
      <Switch Name="Debug" Value="-g "/>
      <Switch Name="Include" Value="-I"/>
      <Switch Name="Library" Value="-l"/>
      <Switch Name="LibraryPath" Value="-L"/>
      <Switch Name="Object" Value="-o "/>
      <Switch Name="Output" Value="-o "/>
      <Switch Name="PreprocessOnly" Value="-E "/>
      <Switch Name="Preprocessor" Value="-D"/>
      <Switch Name="Source" Value="-c "/>
      <Tool Name="ArchiveTool" Value="ar rcus"/>
      <Tool Name="C_CompilerName" Value="gcc"/>
      <Tool Name="CompilerName" Value="gcc"/>
      <Tool Name="LinkerName" Value="gcc"/>
      <Tool Name="ResourceCompiler" Value="windres"/>
      <Tool Name="SharedObjectLinkerName" Value="gcc -shared -fPIC"/>
      <File Extension="c" CompilationLine="$(C_CompilerName) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(C_CmpOptions) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="c++" CompilationLine="$(CompilerName) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CmpOptions) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cc" CompilationLine="$(CompilerName) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CmpOptions) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cpp" CompilationLine="$(CompilerName) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CmpOptions) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cxx" CompilationLine="$(CompilerName) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CmpOptions) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="m" CompilationLine="$(CompilerName) -x objective-c $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CmpOptions) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="mm" CompilationLine="$(CompilerName) -x objective-c++ $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CmpOptions) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="rc" CompilationLine="$(RcCompilerName) -i &quot;$(FileFullPath)&quot; $(RcCmpOptions)   $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(RcIncludePath)" Kind="1"/>
      <Option Name="ObjectSuffix" Value=".o"/>
      <Option Name="DependSuffix" Value=".o.d"/>
      <Option Name="PreprocessSuffix" Value=".o.i"/>
      <Pattern Name="Error" FileNameIndex="1" LineNumberIndex="3">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\\.0-9_/\\+\\-]+ *)(:)([0-9]*)([:0-9]*)(: )((fatal error)|(error)|(undefined reference))</Pattern>
      <Pattern Name="Error" FileNameIndex="3" LineNumberIndex="1">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\\.0-9_/\\+\\-]+ *)(:)([^ ][a-zA-Z:]{0,2}[ a-zA-Z\\.0-9_/\\+\\-]+ *)(:)(\(\.text\+[0-9a-fx]*\))</Pattern>
      <Pattern Name="Error" FileNameIndex="3" LineNumberIndex="1">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\\.0-9_/\\+\\-]+ *)(:)([^ ][a-zA-Z:]{0,2}[ a-zA-Z\\.0-9_/\\+\\-]+ *)(:)([0-9]+)(:)</Pattern>
      <Pattern Name="Error" FileNameIndex="1" LineNumberIndex="1">^([\/a-zA-Z_]*): *cannot</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3">([a-zA-Z:]{0,2}[ a-zA-Z\\.0-9_/\\+\\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?( warning)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3">([a-zA-Z:]{0,2}[ a-zA-Z\\.0-9_/\\+\\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?( note)</Pattern>
      <Pattern Name="Warning" FileNameIndex="2" LineNumberIndex="4">(In file included from *)([a-zA-Z:]{0,2}[ a-zA-Z\\.0-9_/\\+\\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?</Pattern>
      <GlobalIncludePath/>
      <GlobalLibPath/>
      <PathVariable/>
      <CompilerOption Name="-O">Optimize generated code (for speed)</CompilerOption>
      <CompilerOption Name="-O1">Optimize more (for speed)</CompilerOption>
      <CompilerOption Name="-O2">Optimize even more (for speed)</CompilerOption>
      <CompilerOption Name="-O3">Optimize fully (for speed)</CompilerOption>
      <CompilerOption Name="-Os">Optimize generated code (for size)</CompilerOption>
      <CompilerOption Name="-W">Enable standard compiler warnings</CompilerOption>
      <CompilerOption Name="-Wall">Enable all compiler warnings.</CompilerOption>
      <CompilerOption Name="-Wfatal-errors">Stop compiling after first error</CompilerOption>
      <CompilerOption Name="-Wmain">Warn if main() is not conformant</CompilerOption>
      <CompilerOption Name="-ansi">In C mode, support all ISO C90 programs. In C++ mode, remove GNU extensions that conflict with ISO C++.</CompilerOption>
      <CompilerOption Name="-fexpensive-optimizations">Expensive optimizations</CompilerOption>
      <CompilerOption Name="-fopenmp">Enable OpenMP (compilation).</CompilerOption>
      <CompilerOption Name="-g">Produce debugging information.</CompilerOption>
      <CompilerOption Name="-pedantic">Enable warnings demanded by strict ISO C and ISO C++</CompilerOption>
      <CompilerOption Name="-pedantic-errors">Treat as errors the warnings demanded by strict ISO C and ISO C++</CompilerOption>
      <CompilerOption Name="-pg">Profile code when executed.</CompilerOption>
      <CompilerOption Name="-w">Inhibit all warning messages</CompilerOption>
      <LinkerOption Name="-fopenmp">Enable OpenMP (linkage).</LinkerOption>
      <LinkerOption Name="-s">Remove all symbol table and relocation information from the executable.</LinkerOption>
    </Compiler>
    <Compiler Name="gnu g++" GenerateDependenciesFiles="yes">
      <Switch Name="ArchiveOutput" Value=" "/>
      <Switch Name="Debug" Value="-gstab"/>
      <Switch Name="Include" Value="-I"/>
      <Switch Name="Library" Value="-l"/>
      <Switch Name="LibraryPath" Value="-L"/>
      <Switch Name="Object" Value="-o "/>
      <Switch Name="Output" Value="-o "/>
      <Switch Name="PreprocessOnly" Value="-E "/>
      <Switch Name="Preprocessor" Value="-D"/>
      <Switch Name="Source" Value="-c "/>
      <Tool Name="ArchiveTool" Value="ar rcus"/>
      <Tool Name="C_CompilerName" Value="gcc"/>
      <Tool Name="CompilerName" Value="g++"/>
      <Tool Name="LinkerName" Value="g++"/>
      <Tool Name="ResourceCompiler" Value="windres"/>
      <Tool Name="SharedObjectLinkerName" Value="g++ -shared -fPIC"/>
      <File Extension="c" CompilationLine="$(C_CompilerName) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(C_CmpOptions) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="c++" CompilationLine="$(CompilerName) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CmpOptions) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cc" CompilationLine="$(CompilerName) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CmpOptions) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cpp" CompilationLine="$(CompilerName) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CmpOptions) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="cxx" CompilationLine="$(CompilerName) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CmpOptions) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="m" CompilationLine="$(CompilerName) -x objective-c $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CmpOptions) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="mm" CompilationLine="$(CompilerName) -x objective-c++ $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CmpOptions) $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(IncludePath)" Kind="0"/>
      <File Extension="rc" CompilationLine="$(RcCompilerName) -i &quot;$(FileFullPath)&quot; $(RcCmpOptions)   $(ObjectSwitch)$(IntermediateDirectory)/$(ObjectName)$(ObjectSuffix) $(RcIncludePath)" Kind="1"/>
      <Option Name="ObjectSuffix" Value=".o"/>
      <Option Name="DependSuffix" Value=".o.d"/>
      <Option Name="PreprocessSuffix" Value=".o.i"/>
      <Pattern Name="Error" FileNameIndex="1" LineNumberIndex="3">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\\.0-9_/\\+\\-]+ *)(:)([0-9]*)([:0-9]*)(: )((fatal error)|(error)|(undefined reference))</Pattern>
      <Pattern Name="Error" FileNameIndex="3" LineNumberIndex="1">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\\.0-9_/\\+\\-]+ *)(:)([^ ][a-zA-Z:]{0,2}[ a-zA-Z\\.0-9_/\\+\\-]+ *)(:)(\(\.text\+[0-9a-fx]*\))</Pattern>
      <Pattern Name="Error" FileNameIndex="3" LineNumberIndex="1">^([^ ][a-zA-Z:]{0,2}[ a-zA-Z\\.0-9_/\\+\\-]+ *)(:)([^ ][a-zA-Z:]{0,2}[ a-zA-Z\\.0-9_/\\+\\-]+ *)(:)([0-9]+)(:)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3">([a-zA-Z:]{0,2}[ a-zA-Z\\.0-9_/\\+\\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?( warning)</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="3">([a-zA-Z:]{0,2}[ a-zA-Z\\.0-9_/\\+\\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?( note)</Pattern>
      <Pattern Name="Warning" FileNameIndex="2" LineNumberIndex="4">(In file included from *)([a-zA-Z:]{0,2}[ a-zA-Z\\.0-9_/\\+\\-]+ *)(:)([0-9]+ *)(:)([0-9:]*)?</Pattern>
      <GlobalIncludePath/>
      <GlobalLibPath/>
      <PathVariable/>
      <CompilerOption Name="-O">Optimize generated code (for speed)</CompilerOption>
      <CompilerOption Name="-O1">Optimize more (for speed)</CompilerOption>
      <CompilerOption Name="-O2">Optimize even more (for speed)</CompilerOption>
      <CompilerOption Name="-O3">Optimize fully (for speed)</CompilerOption>
      <CompilerOption Name="-Os">Optimize generated code (for size)</CompilerOption>
      <CompilerOption Name="-W">Enable standard compiler warnings</CompilerOption>
      <CompilerOption Name="-Wall">Enable all compiler warnings.</CompilerOption>
      <CompilerOption Name="-Wfatal-errors">Stop compiling after first error</CompilerOption>
      <CompilerOption Name="-Wmain">Warn if main() is not conformant</CompilerOption>
      <CompilerOption Name="-ansi">In C mode, support all ISO C90 programs. In C++ mode, remove GNU extensions that conflict with ISO C++.</CompilerOption>
      <CompilerOption Name="-fexpensive-optimizations">Expensive optimizations</CompilerOption>
      <CompilerOption Name="-fopenmp">Enable OpenMP (compilation).</CompilerOption>
      <CompilerOption Name="-g">Produce debugging information.</CompilerOption>
      <CompilerOption Name="-pedantic">Enable warnings demanded by strict ISO C and ISO C++</CompilerOption>
      <CompilerOption Name="-pedantic-errors">Treat as errors the warnings demanded by strict ISO C and ISO C++</CompilerOption>
      <CompilerOption Name="-pg">Profile code when executed.</CompilerOption>
      <CompilerOption Name="-w">Inhibit all warning messages</CompilerOption>
      <LinkerOption Name="-fopenmp">Enable OpenMP (linkage).</LinkerOption>
      <LinkerOption Name="-s">Remove all symbol table and relocation information from the executable.</LinkerOption>
    </Compiler>
    <Compiler Name="cobra" GenerateDependenciesFiles="no">
      <Switch Name="ArchiveOutput" Value="-ert"/>
      <Switch Name="Debug" Value="-debug"/>
      <Switch Name="Include" Value="-ref:"/>
      <Switch Name="Library" Value="-reference:"/>
      <Switch Name="LibraryPath" Value="-lib:"/>
      <Switch Name="Object" Value="-t:lib"/>
      <Switch Name="Output" Value="-out:"/>
      <Switch Name="PreprocessOnly" Value=""/>
      <Switch Name="Preprocessor" Value=""/>
      <Switch Name="Source" Value="-c "/>
      <Tool Name="ArchiveTool" Value=""/>
      <Tool Name="C_CompilerName" Value="cobra.exe"/>
      <Tool Name="CompilerName" Value="cobra.exe"/>
      <Tool Name="LinkerName" Value=""/>
      <Tool Name="ResourceCompiler" Value=""/>
      <Tool Name="SharedObjectLinkerName" Value=""/>
      <File Extension="cobra" CompilationLine="$(CompilerName) $(SourceSwitch)  $(CmpOptions) $(FileFullName)" Kind="0"/>
      <File Extension="cs" CompilationLine="$(CompilerName) $(SourceSwitch) &quot;$(FileFullPath)&quot; $(CmpOptions) $(ObjectSwitch)$(FilePath)$(IntermediateDirectory)/$(FileName).cs " Kind="0"/>
      <Option Name="ObjectSuffix" Value=".cobra.cs"/>
      <Option Name="DependSuffix" Value=""/>
      <Option Name="PreprocessSuffix" Value=""/>
      <Pattern Name="Error" FileNameIndex="1" LineNumberIndex="2">^([a-zA-Z\.0-9_/\+\-]+)\(([0-9]+)\): error:</Pattern>
      <Pattern Name="Warning" FileNameIndex="1" LineNumberIndex="2">^([a-zA-Z\.0-9_/\+\-]+)\(([0-9]+)\): warning:</Pattern>
      <GlobalIncludePath/>
      <GlobalLibPath/>
      <PathVariable/>
      <CompilerOption Name="-c -compile">compile Only</CompilerOption>
      <CompilerOption Name="-cin  -compile-if-needed">Only compile if any src newer than output file</CompilerOption>
      <CompilerOption Name="-d -debug">compile debugging enabled</CompilerOption>
      <CompilerOption Name="-ert">embed Cobra runtime in exe</CompilerOption>
      <CompilerOption Name="-help">print full option usage info</CompilerOption>
      <CompilerOption Name="-include-asserts">include asserts in exe (default=yes)</CompilerOption>
      <CompilerOption Name="-include-nil-checks">include chks on non nilable items (default=yes)</CompilerOption>
      <CompilerOption Name="-include-tests">include unit tests (default=yes)</CompilerOption>
      <CompilerOption Name="-include-traces">include trace stmts in output assembly (default=yes)</CompilerOption>
      <CompilerOption Name="-kif">Keep Intermediate files</CompilerOption>
      <CompilerOption Name="-lib:PATH">specify additional directories to search for references</CompilerOption>
      <CompilerOption Name="-main:TYPENAME">Specify type (class) containing the 'main' method</CompilerOption>
      <CompilerOption Name="-ns: -name-space:NAME">Sets Namespace for all src files as if specified in files</CompilerOption>
      <CompilerOption Name="-number:decimal|float|float32|float64">Sets real nunmeric type for 'number' type and fractional literals</CompilerOption>
      <CompilerOption Name="-o -optimize">Optimize</CompilerOption>
      <CompilerOption Name="-out:Filename">specify output filename</CompilerOption>
      <CompilerOption Name="-ref  -reference:Some.dll">Add ref to a dll</CompilerOption>
      <CompilerOption Name="-t -target:exe|winexe|lib|module">build specific target type</CompilerOption>
      <CompilerOption Name="-timeit">gives runtime duration and other stats</CompilerOption>
      <CompilerOption Name="-turbo">set option switches to maximise Runtime perf</CompilerOption>
      <CompilerOption Name="-v -verbosity:[0-5]">enable extra compiler output</CompilerOption>
      <CompilerOption Name="-version">Print just the version number</CompilerOption>
    </Compiler>
  </Compilers>
  <BuildSystem Name="GNU makefile for g++/gcc" ToolPath="make" Options="-f" Jobs="4" Active="yes"/>
  <BuildSystem Name="GNU makefile onestep build" ToolPath="make" Options="-f" Jobs="1" Active="no"/>
</BuildSettings>
